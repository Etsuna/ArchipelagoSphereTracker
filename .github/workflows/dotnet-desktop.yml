name: .NET Core Desktop Build (Windows + Linux)

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
        platform: [windows, linux] 

    runs-on: windows-latest 

    env:
      Solution_Name: ArchipelagoSphereTracker.csproj  

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: 🔧 Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: 🔍 Debug file structure
      run: Get-ChildItem -Recurse   # Vérifie la structure du répertoire

    - name: 🔨 Restore dependencies
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: 📦 Build Windows Package
      if: matrix.platform == 'windows'
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: 📦 Build Linux Package
      if: matrix.platform == 'linux'
      run: dotnet publish $env:Solution_Name --configuration $env:Configuration --runtime linux-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true
      env:
        Configuration: ${{ matrix.configuration }}

    - name: 📦 Build Windows App Package (for Windows build only)
      if: matrix.platform == 'windows'
      run: dotnet publish $env:Solution_Name --configuration $env:Configuration --runtime win-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true
      env:
        Configuration: ${{ matrix.configuration }}

    - name: 📤 Upload Windows Build (for Windows build only)
      if: matrix.platform == 'windows'
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Build-${{ matrix.configuration }}
        path: ${{ env.Wap_Project_Directory }}/AppPackages

    - name: 📤 Upload Linux Build (for Linux build only)
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: Linux-Build-${{ matrix.configuration }}
        path: bin/${{ matrix.configuration }}/linux-x64/publish/*
