//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArchipelagoSphereTracker.src.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ArchipelagoSphereTracker.src.Resources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à URL and other information successfully added or updated..
        /// </summary>
        internal static string AddOrEditUrlChannelAsyncSuccessful {
            get {
                return ResourceManager.GetString("AddOrEditUrlChannelAsyncSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error: No Guild/Channel record found. Unable to add the patch..
        /// </summary>
        internal static string AddOrEditUrlChannelPathAsyncError {
            get {
                return ResourceManager.GetString("AddOrEditUrlChannelPathAsyncError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} d ago.
        /// </summary>
        internal static string AgoD {
            get {
                return ResourceManager.GetString("AgoD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} h ago.
        /// </summary>
        internal static string AgoH {
            get {
                return ResourceManager.GetString("AgoH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} min ago.
        /// </summary>
        internal static string AgoM {
            get {
                return ResourceManager.GetString("AgoM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} s ago.
        /// </summary>
        internal static string AgoS {
            get {
                return ResourceManager.GetString("AgoS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Alias added: {0} is now associated with &lt;@{1}&gt; and its recap has been generated..
        /// </summary>
        internal static string AliasAdded {
            get {
                return ResourceManager.GetString("AliasAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The alias &apos;{0}&apos; is already registered for &lt;@{1}&gt;..
        /// </summary>
        internal static string AliasAlreadyRegistered {
            get {
                return ResourceManager.GetString("AliasAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Alias &apos;{0}&apos; deleted..
        /// </summary>
        internal static string AliasDeleted {
            get {
                return ResourceManager.GetString("AliasDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The alias cannot be empty..
        /// </summary>
        internal static string AliasEmpty {
            get {
                return ResourceManager.GetString("AliasEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No alias found for &apos;{0}&apos;..
        /// </summary>
        internal static string AliasNotFound {
            get {
                return ResourceManager.GetString("AliasNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No alias is registered..
        /// </summary>
        internal static string AliasNotRegistered {
            get {
                return ResourceManager.GetString("AliasNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No URL registered for this channel or no alias recorded..
        /// </summary>
        internal static string AliasOrUrlNotRegistered {
            get {
                return ResourceManager.GetString("AliasOrUrlNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You are not the owner of this alias: &apos;{0}&apos;. Deletion not performed..
        /// </summary>
        internal static string AliasOtherOwner {
            get {
                return ResourceManager.GetString("AliasOtherOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Here is the users table:.
        /// </summary>
        internal static string AliasTable {
            get {
                return ResourceManager.GetString("AliasTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à | {0} | {1} | Filler Item Skip: {2}.
        /// </summary>
        internal static string AliasTableValue {
            get {
                return ResourceManager.GetString("AliasTableValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ custom_worlds folder not found..
        /// </summary>
        internal static string ApworldCustomFolderNotFound {
            get {
                return ResourceManager.GetString("ApworldCustomFolderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ No APWORLD file found!.
        /// </summary>
        internal static string ApworldFileNotFound {
            get {
                return ResourceManager.GetString("ApworldFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File {0} sent..
        /// </summary>
        internal static string ApworldFileSent {
            get {
                return ResourceManager.GetString("ApworldFileSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List of apworld.
        /// </summary>
        internal static string ApworldList {
            get {
                return ResourceManager.GetString("ApworldList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ No APWORLD file found!.
        /// </summary>
        internal static string ApworldNotFound {
            get {
                return ResourceManager.GetString("ApworldNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ You must send an APWORLD file!.
        /// </summary>
        internal static string ApworldWrongFile {
            get {
                return ResourceManager.GetString("ApworldWrongFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Archipelago Mode started..
        /// </summary>
        internal static string ArchipelagoModeStarted {
            get {
                return ResourceManager.GetString("ArchipelagoModeStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Database at version {0}: forced migration to {1}..
        /// </summary>
        internal static string BDDForceUpdate {
            get {
                return ResourceManager.GetString("BDDForceUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The database has been updated for your thread. The Frequency check has been set to 5m, you can change it with the command /update-frequency-check..
        /// </summary>
        internal static string BDDUpdated {
            get {
                return ResourceManager.GetString("BDDUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BDD Up To Date..
        /// </summary>
        internal static string BDDUpToDate {
            get {
                return ResourceManager.GetString("BDDUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Channel : {0} (ID: {1}).
        /// </summary>
        internal static string BotChannelId {
            get {
                return ResourceManager.GetString("BotChannelId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Channel not found ({0}).
        /// </summary>
        internal static string BotChannelNotFound {
            get {
                return ResourceManager.GetString("BotChannelNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This command must be executed in a channel..
        /// </summary>
        internal static string BotCommandChannel {
            get {
                return ResourceManager.GetString("BotCommandChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ✅ Done..
        /// </summary>
        internal static string BotCommandDone {
            get {
                return ResourceManager.GetString("BotCommandDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Command failed: {0}.
        /// </summary>
        internal static string BotCommandFailed {
            get {
                return ResourceManager.GetString("BotCommandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This command can’t be executed outside of a server..
        /// </summary>
        internal static string BotCommandOutsideServer {
            get {
                return ResourceManager.GetString("BotCommandOutsideServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This command must be executed in a thread..
        /// </summary>
        internal static string BotCommandThread {
            get {
                return ResourceManager.GetString("BotCommandThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sending error: {0}.
        /// </summary>
        internal static string BotSendingError {
            get {
                return ResourceManager.GetString("BotSendingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The backup folder does not exist, unable to restore..
        /// </summary>
        internal static string BRBackupFolderNotExists {
            get {
                return ResourceManager.GetString("BRBackupFolderNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom_Worlds Backup completed..
        /// </summary>
        internal static string BRCustomWorldBackupCompleted {
            get {
                return ResourceManager.GetString("BRCustomWorldBackupCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error on {0}: {1}.
        /// </summary>
        internal static string BRError {
            get {
                return ResourceManager.GetString("BRError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The external folder does not exist, unable to create a backup..
        /// </summary>
        internal static string BRExternalFolderNotExists {
            get {
                return ResourceManager.GetString("BRExternalFolderNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File moved: {0}.
        /// </summary>
        internal static string BRFileMoved {
            get {
                return ResourceManager.GetString("BRFileMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File restored: {0}.
        /// </summary>
        internal static string BRFileRestored {
            get {
                return ResourceManager.GetString("BRFileRestored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Folder moved: {0}.
        /// </summary>
        internal static string BRFolderMoved {
            get {
                return ResourceManager.GetString("BRFolderMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Folder restored: {0}.
        /// </summary>
        internal static string BRFolderRestored {
            get {
                return ResourceManager.GetString("BRFolderRestored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moved: {0} → {1}.
        /// </summary>
        internal static string BRMoved {
            get {
                return ResourceManager.GetString("BRMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Players folder move completed..
        /// </summary>
        internal static string BRPlayerFolderMoved {
            get {
                return ResourceManager.GetString("BRPlayerFolderMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restored: {0} → {1}.
        /// </summary>
        internal static string BRRestoreMoved {
            get {
                return ResourceManager.GetString("BRRestoreMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rom Backup completed..
        /// </summary>
        internal static string BRRomBackupCompleted {
            get {
                return ResourceManager.GetString("BRRomBackupCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ Unable to find the embedded resource: {0}.
        /// </summary>
        internal static string CAEmbededError {
            get {
                return ResourceManager.GetString("CAEmbededError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ ERROR: Failed to start the process..
        /// </summary>
        internal static string CAErrorProcess {
            get {
                return ResourceManager.GetString("CAErrorProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ Exception : {0} - {1}.
        /// </summary>
        internal static string CAException {
            get {
                return ResourceManager.GetString("CAException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ✅ File copied to: {0}.
        /// </summary>
        internal static string CAFileCopied {
            get {
                return ResourceManager.GetString("CAFileCopied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ The file &apos;generate_templates.apworld&apos; was not written correctly..
        /// </summary>
        internal static string CAGenerateTemplateApworldError {
            get {
                return ResourceManager.GetString("CAGenerateTemplateApworldError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 📦 Generating YAML templates....
        /// </summary>
        internal static string CAGeneratingYamlTemplates {
            get {
                return ResourceManager.GetString("CAGeneratingYamlTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ Launcher not found: {0}.
        /// </summary>
        internal static string CALauncherNotFound {
            get {
                return ResourceManager.GetString("CALauncherNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ ERROR: YAML generation failed (code {0}).
        /// </summary>
        internal static string CAYamlGeneratedError {
            get {
                return ResourceManager.GetString("CAYamlGeneratedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ✅ YAML generated successfully!.
        /// </summary>
        internal static string CAYamlGeneratedSuccessfully {
            get {
                return ResourceManager.GetString("CAYamlGeneratedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à check-frequency.
        /// </summary>
        internal static string CheckFrequency {
            get {
                return ResourceManager.GetString("CheckFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check frequency, default 5m..
        /// </summary>
        internal static string CheckFrequencyDesc {
            get {
                return ResourceManager.GetString("CheckFrequencyDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The verification frequency has been updated: {0}.
        /// </summary>
        internal static string CheckFrequencyUpdated {
            get {
                return ResourceManager.GetString("CheckFrequencyUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🔄 Checking database version....
        /// </summary>
        internal static string CheckingBDDVersion {
            get {
                return ResourceManager.GetString("CheckingBDDVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Players Min &gt; Players Max. Impossible to add this archipelago. Max players is set to {0}..
        /// </summary>
        internal static string CheckPlayerMinMax {
            get {
                return ResourceManager.GetString("CheckPlayerMinMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Complet list of patches for this thread..
        /// </summary>
        internal static string CompletListForThisThread {
            get {
                return ResourceManager.GetString("CompletListForThisThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deletion successful!.
        /// </summary>
        internal static string DeleteChannelDataAsyncDeleteSuccessful {
            get {
                return ResourceManager.GetString("DeleteChannelDataAsyncDeleteSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deletion by GuildId successful!.
        /// </summary>
        internal static string DeleteChannelDataByGuildIdAsyncDeletionGuildIdSuccessful {
            get {
                return ResourceManager.GetString("DeleteChannelDataByGuildIdAsyncDeletionGuildIdSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Download and Install Archipelago version {0} before to install the bot in Archipelago Mode..
        /// </summary>
        internal static string DownloadAndInstall {
            get {
                return ResourceManager.GetString("DownloadAndInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error while updating the verification frequency..
        /// </summary>
        internal static string ErrorCheckFrequencyUpdate {
            get {
                return ResourceManager.GetString("ErrorCheckFrequencyUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Every.
        /// </summary>
        internal static string Every {
            get {
                return ResourceManager.GetString("Every", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Every day.
        /// </summary>
        internal static string EveryDay {
            get {
                return ResourceManager.GetString("EveryDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Filler.
        /// </summary>
        internal static string Filler {
            get {
                return ResourceManager.GetString("Filler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ **Error** : {0}.
        /// </summary>
        internal static string GenerationError {
            get {
                return ResourceManager.GetString("GenerationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 🟢 **Log** : {0}.
        /// </summary>
        internal static string GenerationLog {
            get {
                return ResourceManager.GetString("GenerationLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ℹ️ Info: {0} is not a YAML file. It was deleted before generation..
        /// </summary>
        internal static string GenerationNotAYamlFileIntoZip {
            get {
                return ResourceManager.GetString("GenerationNotAYamlFileIntoZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ No YAML file found!.
        /// </summary>
        internal static string GenerationNoYaml {
            get {
                return ResourceManager.GetString("GenerationNoYaml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ No YAML file found in the archive!.
        /// </summary>
        internal static string GenerationNoYamlIntoZip {
            get {
                return ResourceManager.GetString("GenerationNoYamlIntoZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ The output folder {0} does not exist..
        /// </summary>
        internal static string GenerationOutputFolderNotExists {
            get {
                return ResourceManager.GetString("GenerationOutputFolderNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ✅ Test generation successful!.
        /// </summary>
        internal static string GenerationTestSuccessful {
            get {
                return ResourceManager.GetString("GenerationTestSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ⏳ Timeout: Process stopped after 10 minutes..
        /// </summary>
        internal static string GenerationTimeout {
            get {
                return ResourceManager.GetString("GenerationTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ You must send a ZIP file containing the YAML files!.
        /// </summary>
        internal static string GenerationWrongZipFormat {
            get {
                return ResourceManager.GetString("GenerationWrongZipFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ No ZIP file found..
        /// </summary>
        internal static string GenerationZipNotFound {
            get {
                return ResourceManager.GetString("GenerationZipNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No record found..
        /// </summary>
        internal static string GetPatchAndGameNameForAliasNoRecordFound {
            get {
                return ResourceManager.GetString("GetPatchAndGameNameForAliasNoRecordFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No alias found for the user: {0}.
        /// </summary>
        internal static string GetUserAliasesWithItemsAsyncNoAlias {
            get {
                return ResourceManager.GetString("GetUserAliasesWithItemsAsyncNoAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No item..
        /// </summary>
        internal static string GetUserAliasesWithItemsAsyncNoItem {
            get {
                return ResourceManager.GetString("GetUserAliasesWithItemsAsyncNoItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Frequency Check: {0}..
        /// </summary>
        internal static string HelperCheckFrequency {
            get {
                return ResourceManager.GetString("HelperCheckFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ~~{0} - {1} - {2}%~~.
        /// </summary>
        internal static string HelperGameStatusDone {
            get {
                return ResourceManager.GetString("HelperGameStatusDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à **{0} - {1} - {2}%**.
        /// </summary>
        internal static string HelperGameStatusInProgress {
            get {
                return ResourceManager.GetString("HelperGameStatusInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Status for all games, Thread is silent, Only for added aliases:.
        /// </summary>
        internal static string HelperGameStatusWithSilent {
            get {
                return ResourceManager.GetString("HelperGameStatusWithSilent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Infos:.
        /// </summary>
        internal static string HelperInfos {
            get {
                return ResourceManager.GetString("HelperInfos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Items for {0}:.
        /// </summary>
        internal static string HelperItemsFor {
            get {
                return ResourceManager.GetString("HelperItemsFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Last Check: {0}..
        /// </summary>
        internal static string HelperLastCheck {
            get {
                return ResourceManager.GetString("HelperLastCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Receiver ID not specified..
        /// </summary>
        internal static string HelperNoId {
            get {
                return ResourceManager.GetString("HelperNoId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No items.
        /// </summary>
        internal static string HelperNoItems {
            get {
                return ResourceManager.GetString("HelperNoItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No patch for this user..
        /// </summary>
        internal static string HelperNoPatch {
            get {
                return ResourceManager.GetString("HelperNoPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Patch for {0}, {1}.
        /// </summary>
        internal static string HelperPatch {
            get {
                return ResourceManager.GetString("HelperPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Port: {0}.
        /// </summary>
        internal static string HelperPort {
            get {
                return ResourceManager.GetString("HelperPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Room: {0}.
        /// </summary>
        internal static string HelperRoom {
            get {
                return ResourceManager.GetString("HelperRoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Silent: {0}.
        /// </summary>
        internal static string HelperSilent {
            get {
                return ResourceManager.GetString("HelperSilent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Status for all games:.
        /// </summary>
        internal static string HelperStatusAllGames {
            get {
                return ResourceManager.GetString("HelperStatusAllGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SphereTracker: {0}.
        /// </summary>
        internal static string HelperUrlSphereTracker {
            get {
                return ResourceManager.GetString("HelperUrlSphereTracker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tracker: {0}.
        /// </summary>
        internal static string HelperUrlTracker {
            get {
                return ResourceManager.GetString("HelperUrlTracker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à **{0}&apos;s** **{1}** is at **{2}** in **{3}&apos;s** World..
        /// </summary>
        internal static string HintItem {
            get {
                return ResourceManager.GetString("HintItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Item for {0}:.
        /// </summary>
        internal static string HintItemFor {
            get {
                return ResourceManager.GetString("HintItemFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Item from {0}:.
        /// </summary>
        internal static string HintItemFrom {
            get {
                return ResourceManager.GetString("HintItemFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à **{0}** is at **{1}** in **{2}&apos;s** World..
        /// </summary>
        internal static string HintItemNew {
            get {
                return ResourceManager.GetString("HintItemNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à **{0}** is at **{1}** in **{2}&apos;s** World..
        /// </summary>
        internal static string HintItemUpdated {
            get {
                return ResourceManager.GetString("HintItemUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New Hint.
        /// </summary>
        internal static string HintNew {
            get {
                return ResourceManager.GetString("HintNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Alias not specified..
        /// </summary>
        internal static string HintNoAlias {
            get {
                return ResourceManager.GetString("HintNoAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No hint found for this receiver..
        /// </summary>
        internal static string HintNoHintFoundForReceiver {
            get {
                return ResourceManager.GetString("HintNoHintFoundForReceiver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No hint found for this finder..
        /// </summary>
        internal static string HintNoHintFoundFromFinder {
            get {
                return ResourceManager.GetString("HintNoHintFoundFromFinder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No URL registered for this channel or no hint..
        /// </summary>
        internal static string HintNoUrl {
            get {
                return ResourceManager.GetString("HintNoUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hint Updated.
        /// </summary>
        internal static string HintUpdated {
            get {
                return ResourceManager.GetString("HintUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à hour.
        /// </summary>
        internal static string Hour {
            get {
                return ResourceManager.GetString("Hour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clean {0}.
        /// </summary>
        internal static string InstallCleanTempExtractPath {
            get {
                return ResourceManager.GetString("InstallCleanTempExtractPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The folder {0} already exists, it will be deleted..
        /// </summary>
        internal static string InstallDeleteExtractPath {
            get {
                return ResourceManager.GetString("InstallDeleteExtractPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error: Unable to download Archipelago (code {0})..
        /// </summary>
        internal static string InstallDLArchipelagoError {
            get {
                return ResourceManager.GetString("InstallDLArchipelagoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Downloading {0}....
        /// </summary>
        internal static string InstallDlArchipelagoLinux {
            get {
                return ResourceManager.GetString("InstallDlArchipelagoLinux", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Downloading {0}....
        /// </summary>
        internal static string InstallDLArchipelagoWindows {
            get {
                return ResourceManager.GetString("InstallDLArchipelagoWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Downloading {0}....
        /// </summary>
        internal static string InstallDLInnoExtractor {
            get {
                return ResourceManager.GetString("InstallDLInnoExtractor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error: Unable to download InnoExtractor (code {0})..
        /// </summary>
        internal static string InstallDLInnoExtractorError {
            get {
                return ResourceManager.GetString("InstallDLInnoExtractorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Temporary extraction....
        /// </summary>
        internal static string InstallDLTempExtraction {
            get {
                return ResourceManager.GetString("InstallDLTempExtraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error: Unable to find the extracted folder!.
        /// </summary>
        internal static string InstallDLTempExtractionError {
            get {
                return ResourceManager.GetString("InstallDLTempExtractionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extracting Archipelago....
        /// </summary>
        internal static string InstallExtractingArchipelago {
            get {
                return ResourceManager.GetString("InstallExtractingArchipelago", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 💾 RAM after cleanup: {0} MB.
        /// </summary>
        internal static string InstallFreeMemory {
            get {
                return ResourceManager.GetString("InstallFreeMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Importing ApWorlds into the database....
        /// </summary>
        internal static string InstallImportApworldsDatabase {
            get {
                return ResourceManager.GetString("InstallImportApworldsDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ Error during extraction (code {0}):.
        /// </summary>
        internal static string InstallInnoExtractError {
            get {
                return ResourceManager.GetString("InstallInnoExtractError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ Exception while running innoextract: {0}.
        /// </summary>
        internal static string InstallInnoExtractorException {
            get {
                return ResourceManager.GetString("InstallInnoExtractorException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ✅ Extraction successful..
        /// </summary>
        internal static string InstallInnoExtractorSuccessful {
            get {
                return ResourceManager.GetString("InstallInnoExtractorSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Moving Archipelago installer files....
        /// </summary>
        internal static string InstallMoveArchipelagoFiles {
            get {
                return ResourceManager.GetString("InstallMoveArchipelagoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ⚠️ Folder &apos;app\&apos; not found after extraction..
        /// </summary>
        internal static string InstallMoveArchipelagoFilesFailed {
            get {
                return ResourceManager.GetString("InstallMoveArchipelagoFilesFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ✅ Files successfully moved from &apos;app\&apos; to the root folder..
        /// </summary>
        internal static string InstallMoveArchipelagoFilesSuccessful {
            get {
                return ResourceManager.GetString("InstallMoveArchipelagoFilesSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New version detected {0}.
        /// </summary>
        internal static string InstallNewVersion {
            get {
                return ResourceManager.GetString("InstallNewVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New version detected {0} (previous: {1}).
        /// </summary>
        internal static string InstallNewVersionWithPrevious {
            get {
                return ResourceManager.GetString("InstallNewVersionWithPrevious", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ Unable to start the innoextract process..
        /// </summary>
        internal static string InstallUnableStartInnoExtractProcess {
            get {
                return ResourceManager.GetString("InstallUnableStartInnoExtractProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update completed!.
        /// </summary>
        internal static string InstallUpdateComplete {
            get {
                return ResourceManager.GetString("InstallUpdateComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing vc_redist.x64....
        /// </summary>
        internal static string InstallVcRedistX64 {
            get {
                return ResourceManager.GetString("InstallVcRedistX64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ✅ VC++ Redistributable already installed, no action needed..
        /// </summary>
        internal static string InstallVcRedistX64AlreadyInstalled {
            get {
                return ResourceManager.GetString("InstallVcRedistX64AlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ Exception during VC++ installation: {0}.
        /// </summary>
        internal static string InstallVcRedistX64Exception {
            get {
                return ResourceManager.GetString("InstallVcRedistX64Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ VC++ installation error (code {0})..
        /// </summary>
        internal static string InstallVcRedistX64Failed {
            get {
                return ResourceManager.GetString("InstallVcRedistX64Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ⚠️ The file vc_redist.x64 was not found..
        /// </summary>
        internal static string InstallVcRedistX64NotFound {
            get {
                return ResourceManager.GetString("InstallVcRedistX64NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ✅ VC++ Redistributable installed successfully (silent mode)..
        /// </summary>
        internal static string InstallVcRedistX64Successful {
            get {
                return ResourceManager.GetString("InstallVcRedistX64Successful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No result found for the game &apos;{0}&apos; and the item &apos;{1}&apos;..
        /// </summary>
        internal static string IsFillerAsyncNoResultFound {
            get {
                return ResourceManager.GetString("IsFillerAsyncNoResultFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Items for.
        /// </summary>
        internal static string ItemFor {
            get {
                return ResourceManager.GetString("ItemFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No.
        /// </summary>
        internal static string LanguageNo {
            get {
                return ResourceManager.GetString("LanguageNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes.
        /// </summary>
        internal static string LanguageYes {
            get {
                return ResourceManager.GetString("LanguageYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à N/A.
        /// </summary>
        internal static string NA {
            get {
                return ResourceManager.GetString("NA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No BddVersion Table: migration required..
        /// </summary>
        internal static string NoBddVersionTable {
            get {
                return ResourceManager.GetString("NoBddVersionTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ No file selected..
        /// </summary>
        internal static string NoFileSelected {
            get {
                return ResourceManager.GetString("NoFileSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No patch found for this thread..
        /// </summary>
        internal static string NoPatchForThisThread {
            get {
                return ResourceManager.GetString("NoPatchForThisThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No record found for the specified GuildId and ChannelId..
        /// </summary>
        internal static string NoRecordFoundForGuilChannel {
            get {
                return ResourceManager.GetString("NoRecordFoundForGuilChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Normal Mode started..
        /// </summary>
        internal static string NormalModeStarted {
            get {
                return ResourceManager.GetString("NormalModeStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not Found..
        /// </summary>
        internal static string NotFound {
            get {
                return ResourceManager.GetString("NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No URL registered for this channel..
        /// </summary>
        internal static string NoUrlRegistered {
            get {
                return ResourceManager.GetString("NoUrlRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à **Patch set for this thread.**.
        /// </summary>
        internal static string PatchSetForThisThread {
            get {
                return ResourceManager.GetString("PatchSetForThisThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Archipelago {0} is already installed..
        /// </summary>
        internal static string ProgramArchipelagoAlreadyInstalled {
            get {
                return ResourceManager.GetString("ProgramArchipelagoAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Run the program in Archipelago mode. Not supported on arm64..
        /// </summary>
        internal static string ProgramArchipelagoMode {
            get {
                return ResourceManager.GetString("ProgramArchipelagoMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Program Arm64 Not Supported.
        /// </summary>
        internal static string ProgramArm64NotSupported {
            get {
                return ResourceManager.GetString("ProgramArm64NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bot is connected!.
        /// </summary>
        internal static string ProgramBotIsConnected {
            get {
                return ResourceManager.GetString("ProgramBotIsConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If no or invalid arguments are provided, this help message will be displayed..
        /// </summary>
        internal static string ProgramHelp {
            get {
                return ResourceManager.GetString("ProgramHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Run installation process, needed only for --ArchipelagoMode. Not supported on arm64..
        /// </summary>
        internal static string ProgramInstall {
            get {
                return ResourceManager.GetString("ProgramInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installation Mode.
        /// </summary>
        internal static string ProgramInstallationMode {
            get {
                return ResourceManager.GetString("ProgramInstallationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Run the program in Normal mode..
        /// </summary>
        internal static string ProgramNormalMode {
            get {
                return ResourceManager.GetString("ProgramNormalMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Program OS Not Supported.
        /// </summary>
        internal static string ProgramOSNotSupported {
            get {
                return ResourceManager.GetString("ProgramOSNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Starting bot... {0}.
        /// </summary>
        internal static string ProgramStartingBot {
            get {
                return ResourceManager.GetString("ProgramStartingBot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Progression.
        /// </summary>
        internal static string Progression {
            get {
                return ResourceManager.GetString("Progression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à **{0}** : {1}.
        /// </summary>
        internal static string RACBuildMessage {
            get {
                return ResourceManager.GetString("RACBuildMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Internal error: buildMessage is null even though a recap was requested..
        /// </summary>
        internal static string RACBuildMessageError {
            get {
                return ResourceManager.GetString("RACBuildMessageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clean for Alias {0} completed..
        /// </summary>
        internal static string RACClean {
            get {
                return ResourceManager.GetString("RACClean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clean All for &lt;@{0}&gt; completed..
        /// </summary>
        internal static string RACCleanAll {
            get {
                return ResourceManager.GetString("RACCleanAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Details for &lt;@{0}&gt;.
        /// </summary>
        internal static string RACDetailsForUser {
            get {
                return ResourceManager.GetString("RACDetailsForUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You don’t have any registered alias. Use the /add-alias command to automatically generate a recap file..
        /// </summary>
        internal static string RACNoAliasRegistered {
            get {
                return ResourceManager.GetString("RACNoAliasRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There is no list..
        /// </summary>
        internal static string RACNoList {
            get {
                return ResourceManager.GetString("RACNoList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No URL registered for this channel or no alias recorded..
        /// </summary>
        internal static string RACNoUrlOrAlias {
            get {
                return ResourceManager.GetString("RACNoUrlOrAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The user &lt;@{0}&gt; is not registered with the alias: {1}..
        /// </summary>
        internal static string RACUserNoRegistredWithAlias {
            get {
                return ResourceManager.GetString("RACUserNoRegistredWithAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The user &lt;@{0}&gt; does not exist..
        /// </summary>
        internal static string RACUserNotExists {
            get {
                return ResourceManager.GetString("RACUserNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Recap and clean list of items for a specific game.
        /// </summary>
        internal static string RCRecapAndCleanDescription {
            get {
                return ResourceManager.GetString("RCRecapAndCleanDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Required.
        /// </summary>
        internal static string Required {
            get {
                return ResourceManager.GetString("Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error during the migration of your thread. Please delete your thread and re-add the URL..
        /// </summary>
        internal static string RoomNotFound {
            get {
                return ResourceManager.GetString("RoomNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add Alias.
        /// </summary>
        internal static string SCAddAliasDescription {
            get {
                return ResourceManager.GetString("SCAddAliasDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à filler_items_skip_mention.
        /// </summary>
        internal static string SCAddAliasSkipMention {
            get {
                return ResourceManager.GetString("SCAddAliasSkipMention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set if you want to skip useless mention (filler Items).
        /// </summary>
        internal static string SCAddAliasSkipMentionDescription {
            get {
                return ResourceManager.GetString("SCAddAliasSkipMentionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add a URL and create a thread..
        /// </summary>
        internal static string SCAddUrlDescription {
            get {
                return ResourceManager.GetString("SCAddUrlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose an APWorld.
        /// </summary>
        internal static string SCApworldInfoChoiceDescription {
            get {
                return ResourceManager.GetString("SCApworldInfoChoiceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List info for specific APWorld.
        /// </summary>
        internal static string SCApworldInfoDescription {
            get {
                return ResourceManager.GetString("SCApworldInfoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Backup all APWorlds for the channel.
        /// </summary>
        internal static string SCBackupApworldDescription {
            get {
                return ResourceManager.GetString("SCBackupApworldDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Backup all YAMLs for the channel.
        /// </summary>
        internal static string SCBackupYamlDescription {
            get {
                return ResourceManager.GetString("SCBackupYamlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose an alias.
        /// </summary>
        internal static string SCChooseAnAlias {
            get {
                return ResourceManager.GetString("SCChooseAnAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clean all recap items.
        /// </summary>
        internal static string SCCleanAllDescription {
            get {
                return ResourceManager.GetString("SCCleanAllDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clean list of items for a specific game.
        /// </summary>
        internal static string SCCleanDescription {
            get {
                return ResourceManager.GetString("SCCleanDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clean all YAMLs in the channel.
        /// </summary>
        internal static string SCCleanYamlDescription {
            get {
                return ResourceManager.GetString("SCCleanYamlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete Alias.
        /// </summary>
        internal static string SCDeleteAliasDescription {
            get {
                return ResourceManager.GetString("SCDeleteAliasDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete Url, clean Aliases and Recap.
        /// </summary>
        internal static string SCDeleteUrlDescription {
            get {
                return ResourceManager.GetString("SCDeleteUrlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose a YAML file to delete.
        /// </summary>
        internal static string SCDeleteYamlChooseDescription {
            get {
                return ResourceManager.GetString("SCDeleteYamlChooseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete a specific YAML file.
        /// </summary>
        internal static string SCDeleteYamlDescription {
            get {
                return ResourceManager.GetString("SCDeleteYamlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Download a YAML template.
        /// </summary>
        internal static string SCDownloadYamlTemplateDescription {
            get {
                return ResourceManager.GetString("SCDownloadYamlTemplateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate multiworld from existing YAMLs.
        /// </summary>
        internal static string SCGenerateDescription {
            get {
                return ResourceManager.GetString("SCGenerateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upload a ZIP containing YAMLs.
        /// </summary>
        internal static string SCGenerateWithZipChooseDescription {
            get {
                return ResourceManager.GetString("SCGenerateWithZipChooseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate multiworld from a ZIP.
        /// </summary>
        internal static string SCGenerateWithZipDescription {
            get {
                return ResourceManager.GetString("SCGenerateWithZipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List all Aliases.
        /// </summary>
        internal static string SCGetAliasesDescription {
            get {
                return ResourceManager.GetString("SCGetAliasesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Get a hint for receiver.
        /// </summary>
        internal static string SCGetHintForReveiverDescription {
            get {
                return ResourceManager.GetString("SCGetHintForReveiverDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Get a hint from finder.
        /// </summary>
        internal static string SCGetHintFromFinderDescription {
            get {
                return ResourceManager.GetString("SCGetHintFromFinderDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Get patch for alias.
        /// </summary>
        internal static string SCGetPatchDescription {
            get {
                return ResourceManager.GetString("SCGetPatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Get all infos for your Archipelago.
        /// </summary>
        internal static string SCInfoDescription {
            get {
                return ResourceManager.GetString("SCInfoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List all APWorlds.
        /// </summary>
        internal static string SCListApworldDescription {
            get {
                return ResourceManager.GetString("SCListApworldDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display items line by line (true) or comma separated (false).
        /// </summary>
        internal static string SCListByLineDescription {
            get {
                return ResourceManager.GetString("SCListByLineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List all items for alias.
        /// </summary>
        internal static string SCListItemDescription {
            get {
                return ResourceManager.GetString("SCListItemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List all YAML files for the channel.
        /// </summary>
        internal static string SCListYamlsDescription {
            get {
                return ResourceManager.GetString("SCListYamlsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Recap list of items for all games.
        /// </summary>
        internal static string SCRecapAllDescription {
            get {
                return ResourceManager.GetString("SCRecapAllDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Recap list of items for a specific game.
        /// </summary>
        internal static string SCRecapDescription {
            get {
                return ResourceManager.GetString("SCRecapDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upload an APWorld file.
        /// </summary>
        internal static string SCSendApworldChooseDescription {
            get {
                return ResourceManager.GetString("SCSendApworldChooseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Send or replace an APWorld file.
        /// </summary>
        internal static string SCSendApworldDescription {
            get {
                return ResourceManager.GetString("SCSendApworldDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upload a YAML file.
        /// </summary>
        internal static string SCSendYamlChooseDescription {
            get {
                return ResourceManager.GetString("SCSendYamlChooseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Send or replace a YAML file for generation.
        /// </summary>
        internal static string SCSendYamlDescription {
            get {
                return ResourceManager.GetString("SCSendYamlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Only send message when an alias is set.
        /// </summary>
        internal static string SCSilentDescription {
            get {
                return ResourceManager.GetString("SCSilentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à silent.
        /// </summary>
        internal static string SCSilentOption {
            get {
                return ResourceManager.GetString("SCSilentOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Status for all games.
        /// </summary>
        internal static string SCStatusGameListDescription {
            get {
                return ResourceManager.GetString("SCStatusGameListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose a YAML file to download.
        /// </summary>
        internal static string SCTemplateDescription {
            get {
                return ResourceManager.GetString("SCTemplateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Test generation of multiworld from existing YAMLs.
        /// </summary>
        internal static string SCTestGenerateDescription {
            get {
                return ResourceManager.GetString("SCTestGenerateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à thread-name.
        /// </summary>
        internal static string SCThreadName {
            get {
                return ResourceManager.GetString("SCThreadName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name of the thread to create.
        /// </summary>
        internal static string SCThreadNameDescription {
            get {
                return ResourceManager.GetString("SCThreadNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Private.
        /// </summary>
        internal static string SCThreadPrivate {
            get {
                return ResourceManager.GetString("SCThreadPrivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Public.
        /// </summary>
        internal static string SCThreadPublic {
            get {
                return ResourceManager.GetString("SCThreadPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à thread-type.
        /// </summary>
        internal static string SCThreadType {
            get {
                return ResourceManager.GetString("SCThreadType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Specify if the thread is public or private.
        /// </summary>
        internal static string SCThreadTypeDescription {
            get {
                return ResourceManager.GetString("SCThreadTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The URL to track.
        /// </summary>
        internal static string SCUrlToTrack {
            get {
                return ResourceManager.GetString("SCUrlToTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No channel ID found for this GuildId and ChannelId..
        /// </summary>
        internal static string SendAllPatchesForChannelAsyncNoChannelId {
            get {
                return ResourceManager.GetString("SendAllPatchesForChannelAsyncNoChannelId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Patch for {0}, {1}: {2}.
        /// </summary>
        internal static string SendAllPatchesForChannelAsyncPathLink {
            get {
                return ResourceManager.GetString("SendAllPatchesForChannelAsyncPathLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Database file not found. Skipping migration..
        /// </summary>
        internal static string SkipBDDMigration {
            get {
                return ResourceManager.GetString("SkipBDDMigration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Aliases Updated!.
        /// </summary>
        internal static string TDMAliasUpdated {
            get {
                return ResourceManager.GetString("TDMAliasUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The channel no longer exists, deleting Channel information: {0}..
        /// </summary>
        internal static string TDMChannelNoLongerExists {
            get {
                return ResourceManager.GetString("TDMChannelNoLongerExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The channel still exists: {0}.
        /// </summary>
        internal static string TDMChannelStillExists {
            get {
                return ResourceManager.GetString("TDMChannelStillExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking GameStatus for the channel {0}....
        /// </summary>
        internal static string TDMCheckingGameStatus {
            get {
                return ResourceManager.GetString("TDMCheckingGameStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking Items for the channel {0}....
        /// </summary>
        internal static string TDMCheckingItems {
            get {
                return ResourceManager.GetString("TDMCheckingItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deletion completed..
        /// </summary>
        internal static string TDMDeletionCompleted {
            get {
                return ResourceManager.GetString("TDMDeletionCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à @everyone {0} has completed their goal for this game: {1}!.
        /// </summary>
        internal static string TDMGoalComplete {
            get {
                return ResourceManager.GetString("TDMGoalComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Last activity : {0}.
        /// </summary>
        internal static string TDMLastActivity {
            get {
                return ResourceManager.GetString("TDMLastActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New message on the thread {0}, automatic deletion canceled..
        /// </summary>
        internal static string TDMNewMessageOnThread {
            get {
                return ResourceManager.GetString("TDMNewMessageOnThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No activity for 7 days, deleting the thread....
        /// </summary>
        internal static string TDMNoActivity {
            get {
                return ResourceManager.GetString("TDMNoActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No message for 6 days. If no message is posted before {0} on the thread {1}, it will be deleted. Remember to delete the thread or delete the URL when you no longer need it!.
        /// </summary>
        internal static string TDMNoMessage6Days {
            get {
                return ResourceManager.GetString("TDMNoMessage6Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No message found, using the thread creation date: {0}.
        /// </summary>
        internal static string TDMNoMessageFound {
            get {
                return ResourceManager.GetString("TDMNoMessageFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Server not found {0}, deleting the information..
        /// </summary>
        internal static string TDMServerNotFound {
            get {
                return ResourceManager.GetString("TDMServerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Setting Aliases and GameStatus for the channel {0}....
        /// </summary>
        internal static string TDMSettingsAliasesGamesStatus {
            get {
                return ResourceManager.GetString("TDMSettingsAliasesGamesStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check skipped for: {0} ({1} minutes)..
        /// </summary>
        internal static string TDMSkippingCheck {
            get {
                return ResourceManager.GetString("TDMSkippingCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thread deleted..
        /// </summary>
        internal static string TDMThreadDeleted {
            get {
                return ResourceManager.GetString("TDMThreadDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tracking canceled..
        /// </summary>
        internal static string TDMTrackingCanceled {
            get {
                return ResourceManager.GetString("TDMTrackingCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Waiting 1 minutes before the next check....
        /// </summary>
        internal static string TDMWaitingCheck {
            get {
                return ResourceManager.GetString("TDMWaitingCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à **{0}** sent **{1}** to **{2}** ({3}).
        /// </summary>
        internal static string TDPMEssageItemsNoMention {
            get {
                return ResourceManager.GetString("TDPMEssageItemsNoMention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trap.
        /// </summary>
        internal static string Trap {
            get {
                return ResourceManager.GetString("Trap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown({0}).
        /// </summary>
        internal static string Unknown {
            get {
                return ResourceManager.GetString("Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à URL already set for this channel. Remove the URL before adding a new one..
        /// </summary>
        internal static string URLAlreadySet {
            get {
                return ResourceManager.GetString("URLAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BOT Ready, GL&amp;HF!.
        /// </summary>
        internal static string URLBotReady {
            get {
                return ResourceManager.GetString("URLBotReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sphere_Tracker, Tracker, or the port not found. Addition canceled..
        /// </summary>
        internal static string UrlCanceled {
            get {
                return ResourceManager.GetString("UrlCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You can&apos;t have more than 2 Threads. Delete one before adding a new room url please..
        /// </summary>
        internal static string UrlCheckMaxTread {
            get {
                return ResourceManager.GetString("UrlCheckMaxTread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à URL deleted..
        /// </summary>
        internal static string URLDeleted {
            get {
                return ResourceManager.GetString("URLDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Empty URL not allowed..
        /// </summary>
        internal static string URLEmpty {
            get {
                return ResourceManager.GetString("URLEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name: {0} | Download: {1}.
        /// </summary>
        internal static string UrlGamePatch {
            get {
                return ResourceManager.GetString("UrlGamePatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You can&apos;t have more than {0} players..
        /// </summary>
        internal static string UrlMaxPlayers {
            get {
                return ResourceManager.GetString("UrlMaxPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The link is incorrect; use the room URL..
        /// </summary>
        internal static string URLNotValid {
            get {
                return ResourceManager.GetString("URLNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User not found for the private thread..
        /// </summary>
        internal static string UrlPrivateThreadUserNotFound {
            get {
                return ResourceManager.GetString("UrlPrivateThreadUserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à URL set to {0}. Messages configured for this channel. Please wait while the program retrieves all aliases..
        /// </summary>
        internal static string URLSet {
            get {
                return ResourceManager.GetString("URLSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The thread has been created: {0}, wait for the bot to be ready..
        /// </summary>
        internal static string UrlThredCreated {
            get {
                return ResourceManager.GetString("UrlThredCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Useful.
        /// </summary>
        internal static string Useful {
            get {
                return ResourceManager.GetString("Useful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à All YAML files have been deleted..
        /// </summary>
        internal static string YamlDeleteAllFiles {
            get {
                return ResourceManager.GetString("YamlDeleteAllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error while deleting the files: {0}.
        /// </summary>
        internal static string YamlDeleteAllFilesError {
            get {
                return ResourceManager.GetString("YamlDeleteAllFilesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ The file {0} does not exist..
        /// </summary>
        internal static string YamlDeleteFileNotExists {
            get {
                return ResourceManager.GetString("YamlDeleteFileNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ✅ The file {0} has been successfully deleted..
        /// </summary>
        internal static string YamlFileDeleted {
            get {
                return ResourceManager.GetString("YamlFileDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ Error while deleting the file {0}: {1}.
        /// </summary>
        internal static string YamlFileDeletedError {
            get {
                return ResourceManager.GetString("YamlFileDeletedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ File download failed..
        /// </summary>
        internal static string YamlFileDownloadFailed {
            get {
                return ResourceManager.GetString("YamlFileDownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ The file does not exist!.
        /// </summary>
        internal static string YamlFileNotExists {
            get {
                return ResourceManager.GetString("YamlFileNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File {0} sent..
        /// </summary>
        internal static string YamlFileSent {
            get {
                return ResourceManager.GetString("YamlFileSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List of Yamls:.
        /// </summary>
        internal static string YamlList {
            get {
                return ResourceManager.GetString("YamlList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No YAML file found..
        /// </summary>
        internal static string YamlNotFound {
            get {
                return ResourceManager.GetString("YamlNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ No YAML file found!.
        /// </summary>
        internal static string YamlNoYaml {
            get {
                return ResourceManager.GetString("YamlNoYaml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ❌ You must send a YAML file!.
        /// </summary>
        internal static string YamlWrongFile {
            get {
                return ResourceManager.GetString("YamlWrongFile", resourceCulture);
            }
        }
    }
}
